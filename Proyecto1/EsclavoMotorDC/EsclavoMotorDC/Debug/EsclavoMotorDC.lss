
EsclavoMotorDC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  000008f0  00000964  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008f0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000976  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000009d4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000068  00000000  00000000  00000a14  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b1d  00000000  00000000  00000a7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000837  00000000  00000000  00001599  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000507  00000000  00000000  00001dd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000d0  00000000  00000000  000022d8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004b8  00000000  00000000  000023a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000002bc  00000000  00000000  00002860  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  00002b1c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 ef       	ldi	r30, 0xF0	; 240
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 31       	cpi	r26, 0x12	; 18
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 7b 00 	call	0xf6	; 0xf6 <main>
  8e:	0c 94 76 04 	jmp	0x8ec	; 0x8ec <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <initUltrasonicSensor>:
#define LED_PIN    PB5
#define MOTOR_PIN  PB0  // Pin para el motor DC


void initUltrasonicSensor() {
    DDRD |= (1 << TRIG_PIN);  // Configura TRIG_PIN como salida
  96:	8a b1       	in	r24, 0x0a	; 10
  98:	84 60       	ori	r24, 0x04	; 4
  9a:	8a b9       	out	0x0a, r24	; 10
    DDRD &= ~(1 << ECHO_PIN); // Configura ECHO_PIN como entrada
  9c:	8a b1       	in	r24, 0x0a	; 10
  9e:	87 7f       	andi	r24, 0xF7	; 247
  a0:	8a b9       	out	0x0a, r24	; 10
  a2:	08 95       	ret

000000a4 <getDistance>:
}

uint16_t getDistance() {
    PORTD &= ~(1 << TRIG_PIN);
  a4:	8b b1       	in	r24, 0x0b	; 11
  a6:	8b 7f       	andi	r24, 0xFB	; 251
  a8:	8b b9       	out	0x0b, r24	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  aa:	8a e0       	ldi	r24, 0x0A	; 10
  ac:	8a 95       	dec	r24
  ae:	f1 f7       	brne	.-4      	; 0xac <getDistance+0x8>
  b0:	00 c0       	rjmp	.+0      	; 0xb2 <getDistance+0xe>
    _delay_us(2);
    PORTD |= (1 << TRIG_PIN);
  b2:	8b b1       	in	r24, 0x0b	; 11
  b4:	84 60       	ori	r24, 0x04	; 4
  b6:	8b b9       	out	0x0b, r24	; 11
  b8:	85 e3       	ldi	r24, 0x35	; 53
  ba:	8a 95       	dec	r24
  bc:	f1 f7       	brne	.-4      	; 0xba <getDistance+0x16>
  be:	00 00       	nop
    _delay_us(10);
    PORTD &= ~(1 << TRIG_PIN);
  c0:	8b b1       	in	r24, 0x0b	; 11
  c2:	8b 7f       	andi	r24, 0xFB	; 251
  c4:	8b b9       	out	0x0b, r24	; 11
    
    while (!(PIND & (1 << ECHO_PIN)));
  c6:	4b 9b       	sbis	0x09, 3	; 9
  c8:	fe cf       	rjmp	.-4      	; 0xc6 <getDistance+0x22>
  ca:	20 e0       	ldi	r18, 0x00	; 0
  cc:	30 e0       	ldi	r19, 0x00	; 0
  ce:	06 c0       	rjmp	.+12     	; 0xdc <getDistance+0x38>
    
    uint16_t pulse_width = 0;
    while (PIND & (1 << ECHO_PIN)) {
        pulse_width++;
  d0:	2f 5f       	subi	r18, 0xFF	; 255
  d2:	3f 4f       	sbci	r19, 0xFF	; 255
  d4:	85 e0       	ldi	r24, 0x05	; 5
  d6:	8a 95       	dec	r24
  d8:	f1 f7       	brne	.-4      	; 0xd6 <getDistance+0x32>
  da:	00 00       	nop
    PORTD &= ~(1 << TRIG_PIN);
    
    while (!(PIND & (1 << ECHO_PIN)));
    
    uint16_t pulse_width = 0;
    while (PIND & (1 << ECHO_PIN)) {
  dc:	4b 99       	sbic	0x09, 3	; 9
  de:	f8 cf       	rjmp	.-16     	; 0xd0 <getDistance+0x2c>
        pulse_width++;
        _delay_us(1);
    }

    uint16_t distance = pulse_width / 58;
  e0:	af e9       	ldi	r26, 0x9F	; 159
  e2:	b6 e4       	ldi	r27, 0x46	; 70
  e4:	0e 94 6f 01 	call	0x2de	; 0x2de <__umulhisi3>
    return distance;
}
  e8:	92 95       	swap	r25
  ea:	82 95       	swap	r24
  ec:	8f 70       	andi	r24, 0x0F	; 15
  ee:	89 27       	eor	r24, r25
  f0:	9f 70       	andi	r25, 0x0F	; 15
  f2:	89 27       	eor	r24, r25
  f4:	08 95       	ret

000000f6 <main>:

int main(void) {
  f6:	cf 93       	push	r28
  f8:	df 93       	push	r29
  fa:	cd b7       	in	r28, 0x3d	; 61
  fc:	de b7       	in	r29, 0x3e	; 62
  fe:	60 97       	sbiw	r28, 0x10	; 16
 100:	0f b6       	in	r0, 0x3f	; 63
 102:	f8 94       	cli
 104:	de bf       	out	0x3e, r29	; 62
 106:	0f be       	out	0x3f, r0	; 63
 108:	cd bf       	out	0x3d, r28	; 61
    DDRB |= (1 << LED_PIN) | (1 << MOTOR_PIN);  // Configurar LED_PIN y MOTOR_PIN como salida
 10a:	84 b1       	in	r24, 0x04	; 4
 10c:	81 62       	ori	r24, 0x21	; 33
 10e:	84 b9       	out	0x04, r24	; 4
    
    initUltrasonicSensor();
 110:	0e 94 4b 00 	call	0x96	; 0x96 <initUltrasonicSensor>
    initUART(9600, 0, 0, 0, 0, 1, 8, 103);
 114:	0f 2e       	mov	r0, r31
 116:	f7 e6       	ldi	r31, 0x67	; 103
 118:	af 2e       	mov	r10, r31
 11a:	b1 2c       	mov	r11, r1
 11c:	f0 2d       	mov	r31, r0
 11e:	68 94       	set
 120:	cc 24       	eor	r12, r12
 122:	c3 f8       	bld	r12, 3
 124:	d1 2c       	mov	r13, r1
 126:	ee 24       	eor	r14, r14
 128:	e3 94       	inc	r14
 12a:	f1 2c       	mov	r15, r1
 12c:	00 e0       	ldi	r16, 0x00	; 0
 12e:	10 e0       	ldi	r17, 0x00	; 0
 130:	20 e0       	ldi	r18, 0x00	; 0
 132:	30 e0       	ldi	r19, 0x00	; 0
 134:	40 e0       	ldi	r20, 0x00	; 0
 136:	50 e0       	ldi	r21, 0x00	; 0
 138:	60 e0       	ldi	r22, 0x00	; 0
 13a:	70 e0       	ldi	r23, 0x00	; 0
 13c:	80 e8       	ldi	r24, 0x80	; 128
 13e:	95 e2       	ldi	r25, 0x25	; 37
 140:	0e 94 da 00 	call	0x1b4	; 0x1b4 <initUART>

    char buffer[16];

    while (1) {
        uint16_t distance = getDistance();
 144:	0e 94 52 00 	call	0xa4	; 0xa4 <getDistance>
 148:	8c 01       	movw	r16, r24
        snprintf(buffer, sizeof(buffer), "Distancia: %ucm\n", distance);
 14a:	1f 93       	push	r17
 14c:	8f 93       	push	r24
 14e:	80 e0       	ldi	r24, 0x00	; 0
 150:	91 e0       	ldi	r25, 0x01	; 1
 152:	9f 93       	push	r25
 154:	8f 93       	push	r24
 156:	1f 92       	push	r1
 158:	80 e1       	ldi	r24, 0x10	; 16
 15a:	8f 93       	push	r24
 15c:	ce 01       	movw	r24, r28
 15e:	01 96       	adiw	r24, 0x01	; 1
 160:	7c 01       	movw	r14, r24
 162:	9f 93       	push	r25
 164:	8f 93       	push	r24
 166:	0e 94 7e 01 	call	0x2fc	; 0x2fc <snprintf>
        writeUART_Text(buffer);
 16a:	c7 01       	movw	r24, r14
 16c:	0e 94 5e 01 	call	0x2bc	; 0x2bc <writeUART_Text>

        if (distance <= 20) {
 170:	0f b6       	in	r0, 0x3f	; 63
 172:	f8 94       	cli
 174:	de bf       	out	0x3e, r29	; 62
 176:	0f be       	out	0x3f, r0	; 63
 178:	cd bf       	out	0x3d, r28	; 61
 17a:	05 31       	cpi	r16, 0x15	; 21
 17c:	11 05       	cpc	r17, r1
 17e:	20 f4       	brcc	.+8      	; 0x188 <main+0x92>
            PORTB |= (1 << LED_PIN);   // Encender LED
 180:	85 b1       	in	r24, 0x05	; 5
 182:	80 62       	ori	r24, 0x20	; 32
 184:	85 b9       	out	0x05, r24	; 5
 186:	03 c0       	rjmp	.+6      	; 0x18e <main+0x98>
        } else {
            PORTB &= ~(1 << LED_PIN);  // Apagar LED
 188:	85 b1       	in	r24, 0x05	; 5
 18a:	8f 7d       	andi	r24, 0xDF	; 223
 18c:	85 b9       	out	0x05, r24	; 5
        }

        // Verificar si el LED está encendido antes de activar el motor
        if (PORTB & (1 << LED_PIN)) {
 18e:	2d 9b       	sbis	0x05, 5	; 5
 190:	04 c0       	rjmp	.+8      	; 0x19a <main+0xa4>
            PORTB |= (1 << MOTOR_PIN); // Encender motor DC
 192:	85 b1       	in	r24, 0x05	; 5
 194:	81 60       	ori	r24, 0x01	; 1
 196:	85 b9       	out	0x05, r24	; 5
 198:	03 c0       	rjmp	.+6      	; 0x1a0 <main+0xaa>
        } else {
            PORTB &= ~(1 << MOTOR_PIN);// Apagar motor DC
 19a:	85 b1       	in	r24, 0x05	; 5
 19c:	8e 7f       	andi	r24, 0xFE	; 254
 19e:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1a0:	9f ef       	ldi	r25, 0xFF	; 255
 1a2:	29 e6       	ldi	r18, 0x69	; 105
 1a4:	88 e1       	ldi	r24, 0x18	; 24
 1a6:	91 50       	subi	r25, 0x01	; 1
 1a8:	20 40       	sbci	r18, 0x00	; 0
 1aa:	80 40       	sbci	r24, 0x00	; 0
 1ac:	e1 f7       	brne	.-8      	; 0x1a6 <main+0xb0>
 1ae:	00 c0       	rjmp	.+0      	; 0x1b0 <main+0xba>
 1b0:	00 00       	nop
 1b2:	c8 cf       	rjmp	.-112    	; 0x144 <main+0x4e>

000001b4 <initUART>:
	
}

void writeUART_car(char caracter){
	while (!(UCSR0A & (1<<UDRE0)));
	UDR0=caracter;
 1b4:	af 92       	push	r10
 1b6:	bf 92       	push	r11
 1b8:	cf 92       	push	r12
 1ba:	df 92       	push	r13
 1bc:	ef 92       	push	r14
 1be:	ff 92       	push	r15
 1c0:	0f 93       	push	r16
 1c2:	1f 93       	push	r17
 1c4:	8a b1       	in	r24, 0x0a	; 10
 1c6:	8e 7f       	andi	r24, 0xFE	; 254
 1c8:	8a b9       	out	0x0a, r24	; 10
 1ca:	8a b1       	in	r24, 0x0a	; 10
 1cc:	82 60       	ori	r24, 0x02	; 2
 1ce:	8a b9       	out	0x0a, r24	; 10
 1d0:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 1d4:	61 30       	cpi	r22, 0x01	; 1
 1d6:	71 05       	cpc	r23, r1
 1d8:	29 f4       	brne	.+10     	; 0x1e4 <initUART+0x30>
 1da:	e0 ec       	ldi	r30, 0xC0	; 192
 1dc:	f0 e0       	ldi	r31, 0x00	; 0
 1de:	80 81       	ld	r24, Z
 1e0:	82 60       	ori	r24, 0x02	; 2
 1e2:	80 83       	st	Z, r24
 1e4:	41 30       	cpi	r20, 0x01	; 1
 1e6:	51 05       	cpc	r21, r1
 1e8:	29 f4       	brne	.+10     	; 0x1f4 <initUART+0x40>
 1ea:	e0 ec       	ldi	r30, 0xC0	; 192
 1ec:	f0 e0       	ldi	r31, 0x00	; 0
 1ee:	80 81       	ld	r24, Z
 1f0:	81 60       	ori	r24, 0x01	; 1
 1f2:	80 83       	st	Z, r24
 1f4:	e1 ec       	ldi	r30, 0xC1	; 193
 1f6:	f0 e0       	ldi	r31, 0x00	; 0
 1f8:	10 82       	st	Z, r1
 1fa:	80 81       	ld	r24, Z
 1fc:	80 6a       	ori	r24, 0xA0	; 160
 1fe:	80 83       	st	Z, r24
 200:	80 81       	ld	r24, Z
 202:	88 61       	ori	r24, 0x18	; 24
 204:	80 83       	st	Z, r24
 206:	10 92 c2 00 	sts	0x00C2, r1	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 20a:	21 30       	cpi	r18, 0x01	; 1
 20c:	31 05       	cpc	r19, r1
 20e:	29 f4       	brne	.+10     	; 0x21a <initUART+0x66>
 210:	e2 ec       	ldi	r30, 0xC2	; 194
 212:	f0 e0       	ldi	r31, 0x00	; 0
 214:	80 81       	ld	r24, Z
 216:	80 64       	ori	r24, 0x40	; 64
 218:	80 83       	st	Z, r24
 21a:	01 30       	cpi	r16, 0x01	; 1
 21c:	11 05       	cpc	r17, r1
 21e:	31 f4       	brne	.+12     	; 0x22c <initUART+0x78>
 220:	e2 ec       	ldi	r30, 0xC2	; 194
 222:	f0 e0       	ldi	r31, 0x00	; 0
 224:	80 81       	ld	r24, Z
 226:	80 62       	ori	r24, 0x20	; 32
 228:	80 83       	st	Z, r24
 22a:	08 c0       	rjmp	.+16     	; 0x23c <initUART+0x88>
 22c:	02 30       	cpi	r16, 0x02	; 2
 22e:	11 05       	cpc	r17, r1
 230:	29 f4       	brne	.+10     	; 0x23c <initUART+0x88>
 232:	e2 ec       	ldi	r30, 0xC2	; 194
 234:	f0 e0       	ldi	r31, 0x00	; 0
 236:	80 81       	ld	r24, Z
 238:	80 63       	ori	r24, 0x30	; 48
 23a:	80 83       	st	Z, r24
 23c:	82 e0       	ldi	r24, 0x02	; 2
 23e:	e8 16       	cp	r14, r24
 240:	f1 04       	cpc	r15, r1
 242:	29 f4       	brne	.+10     	; 0x24e <initUART+0x9a>
 244:	e2 ec       	ldi	r30, 0xC2	; 194
 246:	f0 e0       	ldi	r31, 0x00	; 0
 248:	80 81       	ld	r24, Z
 24a:	88 60       	ori	r24, 0x08	; 8
 24c:	80 83       	st	Z, r24
 24e:	87 e0       	ldi	r24, 0x07	; 7
 250:	c8 16       	cp	r12, r24
 252:	d1 04       	cpc	r13, r1
 254:	a9 f0       	breq	.+42     	; 0x280 <initUART+0xcc>
 256:	2c f4       	brge	.+10     	; 0x262 <initUART+0xae>
 258:	86 e0       	ldi	r24, 0x06	; 6
 25a:	c8 16       	cp	r12, r24
 25c:	d1 04       	cpc	r13, r1
 25e:	51 f0       	breq	.+20     	; 0x274 <initUART+0xc0>
 260:	20 c0       	rjmp	.+64     	; 0x2a2 <initUART+0xee>
 262:	88 e0       	ldi	r24, 0x08	; 8
 264:	c8 16       	cp	r12, r24
 266:	d1 04       	cpc	r13, r1
 268:	89 f0       	breq	.+34     	; 0x28c <initUART+0xd8>
 26a:	89 e0       	ldi	r24, 0x09	; 9
 26c:	c8 16       	cp	r12, r24
 26e:	d1 04       	cpc	r13, r1
 270:	99 f0       	breq	.+38     	; 0x298 <initUART+0xe4>
 272:	17 c0       	rjmp	.+46     	; 0x2a2 <initUART+0xee>
 274:	e2 ec       	ldi	r30, 0xC2	; 194
 276:	f0 e0       	ldi	r31, 0x00	; 0
 278:	80 81       	ld	r24, Z
 27a:	82 60       	ori	r24, 0x02	; 2
 27c:	80 83       	st	Z, r24
 27e:	11 c0       	rjmp	.+34     	; 0x2a2 <initUART+0xee>
 280:	e2 ec       	ldi	r30, 0xC2	; 194
 282:	f0 e0       	ldi	r31, 0x00	; 0
 284:	80 81       	ld	r24, Z
 286:	84 60       	ori	r24, 0x04	; 4
 288:	80 83       	st	Z, r24
 28a:	0b c0       	rjmp	.+22     	; 0x2a2 <initUART+0xee>
 28c:	e2 ec       	ldi	r30, 0xC2	; 194
 28e:	f0 e0       	ldi	r31, 0x00	; 0
 290:	80 81       	ld	r24, Z
 292:	86 60       	ori	r24, 0x06	; 6
 294:	80 83       	st	Z, r24
 296:	05 c0       	rjmp	.+10     	; 0x2a2 <initUART+0xee>
 298:	e2 ec       	ldi	r30, 0xC2	; 194
 29a:	f0 e0       	ldi	r31, 0x00	; 0
 29c:	80 81       	ld	r24, Z
 29e:	86 60       	ori	r24, 0x06	; 6
 2a0:	80 83       	st	Z, r24
 2a2:	b0 92 c5 00 	sts	0x00C5, r11	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 2a6:	a0 92 c4 00 	sts	0x00C4, r10	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
 2aa:	1f 91       	pop	r17
 2ac:	0f 91       	pop	r16
 2ae:	ff 90       	pop	r15
 2b0:	ef 90       	pop	r14
 2b2:	df 90       	pop	r13
 2b4:	cf 90       	pop	r12
 2b6:	bf 90       	pop	r11
 2b8:	af 90       	pop	r10
 2ba:	08 95       	ret

000002bc <writeUART_Text>:
}

void writeUART_Text(char* texto){
 2bc:	ac 01       	movw	r20, r24
	uint8_t i;
	for (i=0; texto[i]!='\0'; i++){
 2be:	20 e0       	ldi	r18, 0x00	; 0
 2c0:	07 c0       	rjmp	.+14     	; 0x2d0 <writeUART_Text+0x14>
		while (!(UCSR0A & (1<<UDRE0)));
 2c2:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 2c6:	95 ff       	sbrs	r25, 5
 2c8:	fc cf       	rjmp	.-8      	; 0x2c2 <writeUART_Text+0x6>
		UDR0=texto[i];
 2ca:	30 93 c6 00 	sts	0x00C6, r19	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
	UDR0=caracter;
}

void writeUART_Text(char* texto){
	uint8_t i;
	for (i=0; texto[i]!='\0'; i++){
 2ce:	2f 5f       	subi	r18, 0xFF	; 255
 2d0:	fa 01       	movw	r30, r20
 2d2:	e2 0f       	add	r30, r18
 2d4:	f1 1d       	adc	r31, r1
 2d6:	30 81       	ld	r19, Z
 2d8:	31 11       	cpse	r19, r1
 2da:	f3 cf       	rjmp	.-26     	; 0x2c2 <writeUART_Text+0x6>
		while (!(UCSR0A & (1<<UDRE0)));
		UDR0=texto[i];
	}
}
 2dc:	08 95       	ret

000002de <__umulhisi3>:
 2de:	a2 9f       	mul	r26, r18
 2e0:	b0 01       	movw	r22, r0
 2e2:	b3 9f       	mul	r27, r19
 2e4:	c0 01       	movw	r24, r0
 2e6:	a3 9f       	mul	r26, r19
 2e8:	70 0d       	add	r23, r0
 2ea:	81 1d       	adc	r24, r1
 2ec:	11 24       	eor	r1, r1
 2ee:	91 1d       	adc	r25, r1
 2f0:	b2 9f       	mul	r27, r18
 2f2:	70 0d       	add	r23, r0
 2f4:	81 1d       	adc	r24, r1
 2f6:	11 24       	eor	r1, r1
 2f8:	91 1d       	adc	r25, r1
 2fa:	08 95       	ret

000002fc <snprintf>:
 2fc:	ae e0       	ldi	r26, 0x0E	; 14
 2fe:	b0 e0       	ldi	r27, 0x00	; 0
 300:	e4 e8       	ldi	r30, 0x84	; 132
 302:	f1 e0       	ldi	r31, 0x01	; 1
 304:	0c 94 4d 04 	jmp	0x89a	; 0x89a <__prologue_saves__+0x1c>
 308:	0d 89       	ldd	r16, Y+21	; 0x15
 30a:	1e 89       	ldd	r17, Y+22	; 0x16
 30c:	8f 89       	ldd	r24, Y+23	; 0x17
 30e:	98 8d       	ldd	r25, Y+24	; 0x18
 310:	26 e0       	ldi	r18, 0x06	; 6
 312:	2c 83       	std	Y+4, r18	; 0x04
 314:	1a 83       	std	Y+2, r17	; 0x02
 316:	09 83       	std	Y+1, r16	; 0x01
 318:	97 ff       	sbrs	r25, 7
 31a:	02 c0       	rjmp	.+4      	; 0x320 <snprintf+0x24>
 31c:	80 e0       	ldi	r24, 0x00	; 0
 31e:	90 e8       	ldi	r25, 0x80	; 128
 320:	01 97       	sbiw	r24, 0x01	; 1
 322:	9e 83       	std	Y+6, r25	; 0x06
 324:	8d 83       	std	Y+5, r24	; 0x05
 326:	ae 01       	movw	r20, r28
 328:	45 5e       	subi	r20, 0xE5	; 229
 32a:	5f 4f       	sbci	r21, 0xFF	; 255
 32c:	69 8d       	ldd	r22, Y+25	; 0x19
 32e:	7a 8d       	ldd	r23, Y+26	; 0x1a
 330:	ce 01       	movw	r24, r28
 332:	01 96       	adiw	r24, 0x01	; 1
 334:	0e 94 ae 01 	call	0x35c	; 0x35c <vfprintf>
 338:	4d 81       	ldd	r20, Y+5	; 0x05
 33a:	5e 81       	ldd	r21, Y+6	; 0x06
 33c:	57 fd       	sbrc	r21, 7
 33e:	0a c0       	rjmp	.+20     	; 0x354 <snprintf+0x58>
 340:	2f 81       	ldd	r18, Y+7	; 0x07
 342:	38 85       	ldd	r19, Y+8	; 0x08
 344:	42 17       	cp	r20, r18
 346:	53 07       	cpc	r21, r19
 348:	0c f4       	brge	.+2      	; 0x34c <snprintf+0x50>
 34a:	9a 01       	movw	r18, r20
 34c:	f8 01       	movw	r30, r16
 34e:	e2 0f       	add	r30, r18
 350:	f3 1f       	adc	r31, r19
 352:	10 82       	st	Z, r1
 354:	2e 96       	adiw	r28, 0x0e	; 14
 356:	e4 e0       	ldi	r30, 0x04	; 4
 358:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <__epilogue_restores__+0x1c>

0000035c <vfprintf>:
 35c:	ab e0       	ldi	r26, 0x0B	; 11
 35e:	b0 e0       	ldi	r27, 0x00	; 0
 360:	e4 eb       	ldi	r30, 0xB4	; 180
 362:	f1 e0       	ldi	r31, 0x01	; 1
 364:	0c 94 3f 04 	jmp	0x87e	; 0x87e <__prologue_saves__>
 368:	6c 01       	movw	r12, r24
 36a:	7b 01       	movw	r14, r22
 36c:	8a 01       	movw	r16, r20
 36e:	fc 01       	movw	r30, r24
 370:	17 82       	std	Z+7, r1	; 0x07
 372:	16 82       	std	Z+6, r1	; 0x06
 374:	83 81       	ldd	r24, Z+3	; 0x03
 376:	81 ff       	sbrs	r24, 1
 378:	cc c1       	rjmp	.+920    	; 0x712 <__EEPROM_REGION_LENGTH__+0x312>
 37a:	ce 01       	movw	r24, r28
 37c:	01 96       	adiw	r24, 0x01	; 1
 37e:	3c 01       	movw	r6, r24
 380:	f6 01       	movw	r30, r12
 382:	93 81       	ldd	r25, Z+3	; 0x03
 384:	f7 01       	movw	r30, r14
 386:	93 fd       	sbrc	r25, 3
 388:	85 91       	lpm	r24, Z+
 38a:	93 ff       	sbrs	r25, 3
 38c:	81 91       	ld	r24, Z+
 38e:	7f 01       	movw	r14, r30
 390:	88 23       	and	r24, r24
 392:	09 f4       	brne	.+2      	; 0x396 <vfprintf+0x3a>
 394:	ba c1       	rjmp	.+884    	; 0x70a <__EEPROM_REGION_LENGTH__+0x30a>
 396:	85 32       	cpi	r24, 0x25	; 37
 398:	39 f4       	brne	.+14     	; 0x3a8 <vfprintf+0x4c>
 39a:	93 fd       	sbrc	r25, 3
 39c:	85 91       	lpm	r24, Z+
 39e:	93 ff       	sbrs	r25, 3
 3a0:	81 91       	ld	r24, Z+
 3a2:	7f 01       	movw	r14, r30
 3a4:	85 32       	cpi	r24, 0x25	; 37
 3a6:	29 f4       	brne	.+10     	; 0x3b2 <vfprintf+0x56>
 3a8:	b6 01       	movw	r22, r12
 3aa:	90 e0       	ldi	r25, 0x00	; 0
 3ac:	0e 94 a5 03 	call	0x74a	; 0x74a <fputc>
 3b0:	e7 cf       	rjmp	.-50     	; 0x380 <vfprintf+0x24>
 3b2:	91 2c       	mov	r9, r1
 3b4:	21 2c       	mov	r2, r1
 3b6:	31 2c       	mov	r3, r1
 3b8:	ff e1       	ldi	r31, 0x1F	; 31
 3ba:	f3 15       	cp	r31, r3
 3bc:	d8 f0       	brcs	.+54     	; 0x3f4 <vfprintf+0x98>
 3be:	8b 32       	cpi	r24, 0x2B	; 43
 3c0:	79 f0       	breq	.+30     	; 0x3e0 <vfprintf+0x84>
 3c2:	38 f4       	brcc	.+14     	; 0x3d2 <vfprintf+0x76>
 3c4:	80 32       	cpi	r24, 0x20	; 32
 3c6:	79 f0       	breq	.+30     	; 0x3e6 <vfprintf+0x8a>
 3c8:	83 32       	cpi	r24, 0x23	; 35
 3ca:	a1 f4       	brne	.+40     	; 0x3f4 <vfprintf+0x98>
 3cc:	23 2d       	mov	r18, r3
 3ce:	20 61       	ori	r18, 0x10	; 16
 3d0:	1d c0       	rjmp	.+58     	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
 3d2:	8d 32       	cpi	r24, 0x2D	; 45
 3d4:	61 f0       	breq	.+24     	; 0x3ee <vfprintf+0x92>
 3d6:	80 33       	cpi	r24, 0x30	; 48
 3d8:	69 f4       	brne	.+26     	; 0x3f4 <vfprintf+0x98>
 3da:	23 2d       	mov	r18, r3
 3dc:	21 60       	ori	r18, 0x01	; 1
 3de:	16 c0       	rjmp	.+44     	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
 3e0:	83 2d       	mov	r24, r3
 3e2:	82 60       	ori	r24, 0x02	; 2
 3e4:	38 2e       	mov	r3, r24
 3e6:	e3 2d       	mov	r30, r3
 3e8:	e4 60       	ori	r30, 0x04	; 4
 3ea:	3e 2e       	mov	r3, r30
 3ec:	2a c0       	rjmp	.+84     	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 3ee:	f3 2d       	mov	r31, r3
 3f0:	f8 60       	ori	r31, 0x08	; 8
 3f2:	1d c0       	rjmp	.+58     	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 3f4:	37 fc       	sbrc	r3, 7
 3f6:	2d c0       	rjmp	.+90     	; 0x452 <__EEPROM_REGION_LENGTH__+0x52>
 3f8:	20 ed       	ldi	r18, 0xD0	; 208
 3fa:	28 0f       	add	r18, r24
 3fc:	2a 30       	cpi	r18, 0x0A	; 10
 3fe:	40 f0       	brcs	.+16     	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 400:	8e 32       	cpi	r24, 0x2E	; 46
 402:	b9 f4       	brne	.+46     	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
 404:	36 fc       	sbrc	r3, 6
 406:	81 c1       	rjmp	.+770    	; 0x70a <__EEPROM_REGION_LENGTH__+0x30a>
 408:	23 2d       	mov	r18, r3
 40a:	20 64       	ori	r18, 0x40	; 64
 40c:	32 2e       	mov	r3, r18
 40e:	19 c0       	rjmp	.+50     	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 410:	36 fe       	sbrs	r3, 6
 412:	06 c0       	rjmp	.+12     	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 414:	8a e0       	ldi	r24, 0x0A	; 10
 416:	98 9e       	mul	r9, r24
 418:	20 0d       	add	r18, r0
 41a:	11 24       	eor	r1, r1
 41c:	92 2e       	mov	r9, r18
 41e:	11 c0       	rjmp	.+34     	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 420:	ea e0       	ldi	r30, 0x0A	; 10
 422:	2e 9e       	mul	r2, r30
 424:	20 0d       	add	r18, r0
 426:	11 24       	eor	r1, r1
 428:	22 2e       	mov	r2, r18
 42a:	f3 2d       	mov	r31, r3
 42c:	f0 62       	ori	r31, 0x20	; 32
 42e:	3f 2e       	mov	r3, r31
 430:	08 c0       	rjmp	.+16     	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 432:	8c 36       	cpi	r24, 0x6C	; 108
 434:	21 f4       	brne	.+8      	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 436:	83 2d       	mov	r24, r3
 438:	80 68       	ori	r24, 0x80	; 128
 43a:	38 2e       	mov	r3, r24
 43c:	02 c0       	rjmp	.+4      	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 43e:	88 36       	cpi	r24, 0x68	; 104
 440:	41 f4       	brne	.+16     	; 0x452 <__EEPROM_REGION_LENGTH__+0x52>
 442:	f7 01       	movw	r30, r14
 444:	93 fd       	sbrc	r25, 3
 446:	85 91       	lpm	r24, Z+
 448:	93 ff       	sbrs	r25, 3
 44a:	81 91       	ld	r24, Z+
 44c:	7f 01       	movw	r14, r30
 44e:	81 11       	cpse	r24, r1
 450:	b3 cf       	rjmp	.-154    	; 0x3b8 <vfprintf+0x5c>
 452:	98 2f       	mov	r25, r24
 454:	9f 7d       	andi	r25, 0xDF	; 223
 456:	95 54       	subi	r25, 0x45	; 69
 458:	93 30       	cpi	r25, 0x03	; 3
 45a:	28 f4       	brcc	.+10     	; 0x466 <__EEPROM_REGION_LENGTH__+0x66>
 45c:	0c 5f       	subi	r16, 0xFC	; 252
 45e:	1f 4f       	sbci	r17, 0xFF	; 255
 460:	9f e3       	ldi	r25, 0x3F	; 63
 462:	99 83       	std	Y+1, r25	; 0x01
 464:	0d c0       	rjmp	.+26     	; 0x480 <__EEPROM_REGION_LENGTH__+0x80>
 466:	83 36       	cpi	r24, 0x63	; 99
 468:	31 f0       	breq	.+12     	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
 46a:	83 37       	cpi	r24, 0x73	; 115
 46c:	71 f0       	breq	.+28     	; 0x48a <__EEPROM_REGION_LENGTH__+0x8a>
 46e:	83 35       	cpi	r24, 0x53	; 83
 470:	09 f0       	breq	.+2      	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
 472:	59 c0       	rjmp	.+178    	; 0x526 <__EEPROM_REGION_LENGTH__+0x126>
 474:	21 c0       	rjmp	.+66     	; 0x4b8 <__EEPROM_REGION_LENGTH__+0xb8>
 476:	f8 01       	movw	r30, r16
 478:	80 81       	ld	r24, Z
 47a:	89 83       	std	Y+1, r24	; 0x01
 47c:	0e 5f       	subi	r16, 0xFE	; 254
 47e:	1f 4f       	sbci	r17, 0xFF	; 255
 480:	88 24       	eor	r8, r8
 482:	83 94       	inc	r8
 484:	91 2c       	mov	r9, r1
 486:	53 01       	movw	r10, r6
 488:	13 c0       	rjmp	.+38     	; 0x4b0 <__EEPROM_REGION_LENGTH__+0xb0>
 48a:	28 01       	movw	r4, r16
 48c:	f2 e0       	ldi	r31, 0x02	; 2
 48e:	4f 0e       	add	r4, r31
 490:	51 1c       	adc	r5, r1
 492:	f8 01       	movw	r30, r16
 494:	a0 80       	ld	r10, Z
 496:	b1 80       	ldd	r11, Z+1	; 0x01
 498:	36 fe       	sbrs	r3, 6
 49a:	03 c0       	rjmp	.+6      	; 0x4a2 <__EEPROM_REGION_LENGTH__+0xa2>
 49c:	69 2d       	mov	r22, r9
 49e:	70 e0       	ldi	r23, 0x00	; 0
 4a0:	02 c0       	rjmp	.+4      	; 0x4a6 <__EEPROM_REGION_LENGTH__+0xa6>
 4a2:	6f ef       	ldi	r22, 0xFF	; 255
 4a4:	7f ef       	ldi	r23, 0xFF	; 255
 4a6:	c5 01       	movw	r24, r10
 4a8:	0e 94 9a 03 	call	0x734	; 0x734 <strnlen>
 4ac:	4c 01       	movw	r8, r24
 4ae:	82 01       	movw	r16, r4
 4b0:	f3 2d       	mov	r31, r3
 4b2:	ff 77       	andi	r31, 0x7F	; 127
 4b4:	3f 2e       	mov	r3, r31
 4b6:	16 c0       	rjmp	.+44     	; 0x4e4 <__EEPROM_REGION_LENGTH__+0xe4>
 4b8:	28 01       	movw	r4, r16
 4ba:	22 e0       	ldi	r18, 0x02	; 2
 4bc:	42 0e       	add	r4, r18
 4be:	51 1c       	adc	r5, r1
 4c0:	f8 01       	movw	r30, r16
 4c2:	a0 80       	ld	r10, Z
 4c4:	b1 80       	ldd	r11, Z+1	; 0x01
 4c6:	36 fe       	sbrs	r3, 6
 4c8:	03 c0       	rjmp	.+6      	; 0x4d0 <__EEPROM_REGION_LENGTH__+0xd0>
 4ca:	69 2d       	mov	r22, r9
 4cc:	70 e0       	ldi	r23, 0x00	; 0
 4ce:	02 c0       	rjmp	.+4      	; 0x4d4 <__EEPROM_REGION_LENGTH__+0xd4>
 4d0:	6f ef       	ldi	r22, 0xFF	; 255
 4d2:	7f ef       	ldi	r23, 0xFF	; 255
 4d4:	c5 01       	movw	r24, r10
 4d6:	0e 94 8f 03 	call	0x71e	; 0x71e <strnlen_P>
 4da:	4c 01       	movw	r8, r24
 4dc:	f3 2d       	mov	r31, r3
 4de:	f0 68       	ori	r31, 0x80	; 128
 4e0:	3f 2e       	mov	r3, r31
 4e2:	82 01       	movw	r16, r4
 4e4:	33 fc       	sbrc	r3, 3
 4e6:	1b c0       	rjmp	.+54     	; 0x51e <__EEPROM_REGION_LENGTH__+0x11e>
 4e8:	82 2d       	mov	r24, r2
 4ea:	90 e0       	ldi	r25, 0x00	; 0
 4ec:	88 16       	cp	r8, r24
 4ee:	99 06       	cpc	r9, r25
 4f0:	b0 f4       	brcc	.+44     	; 0x51e <__EEPROM_REGION_LENGTH__+0x11e>
 4f2:	b6 01       	movw	r22, r12
 4f4:	80 e2       	ldi	r24, 0x20	; 32
 4f6:	90 e0       	ldi	r25, 0x00	; 0
 4f8:	0e 94 a5 03 	call	0x74a	; 0x74a <fputc>
 4fc:	2a 94       	dec	r2
 4fe:	f4 cf       	rjmp	.-24     	; 0x4e8 <__EEPROM_REGION_LENGTH__+0xe8>
 500:	f5 01       	movw	r30, r10
 502:	37 fc       	sbrc	r3, 7
 504:	85 91       	lpm	r24, Z+
 506:	37 fe       	sbrs	r3, 7
 508:	81 91       	ld	r24, Z+
 50a:	5f 01       	movw	r10, r30
 50c:	b6 01       	movw	r22, r12
 50e:	90 e0       	ldi	r25, 0x00	; 0
 510:	0e 94 a5 03 	call	0x74a	; 0x74a <fputc>
 514:	21 10       	cpse	r2, r1
 516:	2a 94       	dec	r2
 518:	21 e0       	ldi	r18, 0x01	; 1
 51a:	82 1a       	sub	r8, r18
 51c:	91 08       	sbc	r9, r1
 51e:	81 14       	cp	r8, r1
 520:	91 04       	cpc	r9, r1
 522:	71 f7       	brne	.-36     	; 0x500 <__EEPROM_REGION_LENGTH__+0x100>
 524:	e8 c0       	rjmp	.+464    	; 0x6f6 <__EEPROM_REGION_LENGTH__+0x2f6>
 526:	84 36       	cpi	r24, 0x64	; 100
 528:	11 f0       	breq	.+4      	; 0x52e <__EEPROM_REGION_LENGTH__+0x12e>
 52a:	89 36       	cpi	r24, 0x69	; 105
 52c:	41 f5       	brne	.+80     	; 0x57e <__EEPROM_REGION_LENGTH__+0x17e>
 52e:	f8 01       	movw	r30, r16
 530:	37 fe       	sbrs	r3, 7
 532:	07 c0       	rjmp	.+14     	; 0x542 <__EEPROM_REGION_LENGTH__+0x142>
 534:	60 81       	ld	r22, Z
 536:	71 81       	ldd	r23, Z+1	; 0x01
 538:	82 81       	ldd	r24, Z+2	; 0x02
 53a:	93 81       	ldd	r25, Z+3	; 0x03
 53c:	0c 5f       	subi	r16, 0xFC	; 252
 53e:	1f 4f       	sbci	r17, 0xFF	; 255
 540:	08 c0       	rjmp	.+16     	; 0x552 <__EEPROM_REGION_LENGTH__+0x152>
 542:	60 81       	ld	r22, Z
 544:	71 81       	ldd	r23, Z+1	; 0x01
 546:	07 2e       	mov	r0, r23
 548:	00 0c       	add	r0, r0
 54a:	88 0b       	sbc	r24, r24
 54c:	99 0b       	sbc	r25, r25
 54e:	0e 5f       	subi	r16, 0xFE	; 254
 550:	1f 4f       	sbci	r17, 0xFF	; 255
 552:	f3 2d       	mov	r31, r3
 554:	ff 76       	andi	r31, 0x6F	; 111
 556:	3f 2e       	mov	r3, r31
 558:	97 ff       	sbrs	r25, 7
 55a:	09 c0       	rjmp	.+18     	; 0x56e <__EEPROM_REGION_LENGTH__+0x16e>
 55c:	90 95       	com	r25
 55e:	80 95       	com	r24
 560:	70 95       	com	r23
 562:	61 95       	neg	r22
 564:	7f 4f       	sbci	r23, 0xFF	; 255
 566:	8f 4f       	sbci	r24, 0xFF	; 255
 568:	9f 4f       	sbci	r25, 0xFF	; 255
 56a:	f0 68       	ori	r31, 0x80	; 128
 56c:	3f 2e       	mov	r3, r31
 56e:	2a e0       	ldi	r18, 0x0A	; 10
 570:	30 e0       	ldi	r19, 0x00	; 0
 572:	a3 01       	movw	r20, r6
 574:	0e 94 e1 03 	call	0x7c2	; 0x7c2 <__ultoa_invert>
 578:	88 2e       	mov	r8, r24
 57a:	86 18       	sub	r8, r6
 57c:	45 c0       	rjmp	.+138    	; 0x608 <__EEPROM_REGION_LENGTH__+0x208>
 57e:	85 37       	cpi	r24, 0x75	; 117
 580:	31 f4       	brne	.+12     	; 0x58e <__EEPROM_REGION_LENGTH__+0x18e>
 582:	23 2d       	mov	r18, r3
 584:	2f 7e       	andi	r18, 0xEF	; 239
 586:	b2 2e       	mov	r11, r18
 588:	2a e0       	ldi	r18, 0x0A	; 10
 58a:	30 e0       	ldi	r19, 0x00	; 0
 58c:	25 c0       	rjmp	.+74     	; 0x5d8 <__EEPROM_REGION_LENGTH__+0x1d8>
 58e:	93 2d       	mov	r25, r3
 590:	99 7f       	andi	r25, 0xF9	; 249
 592:	b9 2e       	mov	r11, r25
 594:	8f 36       	cpi	r24, 0x6F	; 111
 596:	c1 f0       	breq	.+48     	; 0x5c8 <__EEPROM_REGION_LENGTH__+0x1c8>
 598:	18 f4       	brcc	.+6      	; 0x5a0 <__EEPROM_REGION_LENGTH__+0x1a0>
 59a:	88 35       	cpi	r24, 0x58	; 88
 59c:	79 f0       	breq	.+30     	; 0x5bc <__EEPROM_REGION_LENGTH__+0x1bc>
 59e:	b5 c0       	rjmp	.+362    	; 0x70a <__EEPROM_REGION_LENGTH__+0x30a>
 5a0:	80 37       	cpi	r24, 0x70	; 112
 5a2:	19 f0       	breq	.+6      	; 0x5aa <__EEPROM_REGION_LENGTH__+0x1aa>
 5a4:	88 37       	cpi	r24, 0x78	; 120
 5a6:	21 f0       	breq	.+8      	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
 5a8:	b0 c0       	rjmp	.+352    	; 0x70a <__EEPROM_REGION_LENGTH__+0x30a>
 5aa:	e9 2f       	mov	r30, r25
 5ac:	e0 61       	ori	r30, 0x10	; 16
 5ae:	be 2e       	mov	r11, r30
 5b0:	b4 fe       	sbrs	r11, 4
 5b2:	0d c0       	rjmp	.+26     	; 0x5ce <__EEPROM_REGION_LENGTH__+0x1ce>
 5b4:	fb 2d       	mov	r31, r11
 5b6:	f4 60       	ori	r31, 0x04	; 4
 5b8:	bf 2e       	mov	r11, r31
 5ba:	09 c0       	rjmp	.+18     	; 0x5ce <__EEPROM_REGION_LENGTH__+0x1ce>
 5bc:	34 fe       	sbrs	r3, 4
 5be:	0a c0       	rjmp	.+20     	; 0x5d4 <__EEPROM_REGION_LENGTH__+0x1d4>
 5c0:	29 2f       	mov	r18, r25
 5c2:	26 60       	ori	r18, 0x06	; 6
 5c4:	b2 2e       	mov	r11, r18
 5c6:	06 c0       	rjmp	.+12     	; 0x5d4 <__EEPROM_REGION_LENGTH__+0x1d4>
 5c8:	28 e0       	ldi	r18, 0x08	; 8
 5ca:	30 e0       	ldi	r19, 0x00	; 0
 5cc:	05 c0       	rjmp	.+10     	; 0x5d8 <__EEPROM_REGION_LENGTH__+0x1d8>
 5ce:	20 e1       	ldi	r18, 0x10	; 16
 5d0:	30 e0       	ldi	r19, 0x00	; 0
 5d2:	02 c0       	rjmp	.+4      	; 0x5d8 <__EEPROM_REGION_LENGTH__+0x1d8>
 5d4:	20 e1       	ldi	r18, 0x10	; 16
 5d6:	32 e0       	ldi	r19, 0x02	; 2
 5d8:	f8 01       	movw	r30, r16
 5da:	b7 fe       	sbrs	r11, 7
 5dc:	07 c0       	rjmp	.+14     	; 0x5ec <__EEPROM_REGION_LENGTH__+0x1ec>
 5de:	60 81       	ld	r22, Z
 5e0:	71 81       	ldd	r23, Z+1	; 0x01
 5e2:	82 81       	ldd	r24, Z+2	; 0x02
 5e4:	93 81       	ldd	r25, Z+3	; 0x03
 5e6:	0c 5f       	subi	r16, 0xFC	; 252
 5e8:	1f 4f       	sbci	r17, 0xFF	; 255
 5ea:	06 c0       	rjmp	.+12     	; 0x5f8 <__EEPROM_REGION_LENGTH__+0x1f8>
 5ec:	60 81       	ld	r22, Z
 5ee:	71 81       	ldd	r23, Z+1	; 0x01
 5f0:	80 e0       	ldi	r24, 0x00	; 0
 5f2:	90 e0       	ldi	r25, 0x00	; 0
 5f4:	0e 5f       	subi	r16, 0xFE	; 254
 5f6:	1f 4f       	sbci	r17, 0xFF	; 255
 5f8:	a3 01       	movw	r20, r6
 5fa:	0e 94 e1 03 	call	0x7c2	; 0x7c2 <__ultoa_invert>
 5fe:	88 2e       	mov	r8, r24
 600:	86 18       	sub	r8, r6
 602:	fb 2d       	mov	r31, r11
 604:	ff 77       	andi	r31, 0x7F	; 127
 606:	3f 2e       	mov	r3, r31
 608:	36 fe       	sbrs	r3, 6
 60a:	0d c0       	rjmp	.+26     	; 0x626 <__EEPROM_REGION_LENGTH__+0x226>
 60c:	23 2d       	mov	r18, r3
 60e:	2e 7f       	andi	r18, 0xFE	; 254
 610:	a2 2e       	mov	r10, r18
 612:	89 14       	cp	r8, r9
 614:	58 f4       	brcc	.+22     	; 0x62c <__EEPROM_REGION_LENGTH__+0x22c>
 616:	34 fe       	sbrs	r3, 4
 618:	0b c0       	rjmp	.+22     	; 0x630 <__EEPROM_REGION_LENGTH__+0x230>
 61a:	32 fc       	sbrc	r3, 2
 61c:	09 c0       	rjmp	.+18     	; 0x630 <__EEPROM_REGION_LENGTH__+0x230>
 61e:	83 2d       	mov	r24, r3
 620:	8e 7e       	andi	r24, 0xEE	; 238
 622:	a8 2e       	mov	r10, r24
 624:	05 c0       	rjmp	.+10     	; 0x630 <__EEPROM_REGION_LENGTH__+0x230>
 626:	b8 2c       	mov	r11, r8
 628:	a3 2c       	mov	r10, r3
 62a:	03 c0       	rjmp	.+6      	; 0x632 <__EEPROM_REGION_LENGTH__+0x232>
 62c:	b8 2c       	mov	r11, r8
 62e:	01 c0       	rjmp	.+2      	; 0x632 <__EEPROM_REGION_LENGTH__+0x232>
 630:	b9 2c       	mov	r11, r9
 632:	a4 fe       	sbrs	r10, 4
 634:	0f c0       	rjmp	.+30     	; 0x654 <__EEPROM_REGION_LENGTH__+0x254>
 636:	fe 01       	movw	r30, r28
 638:	e8 0d       	add	r30, r8
 63a:	f1 1d       	adc	r31, r1
 63c:	80 81       	ld	r24, Z
 63e:	80 33       	cpi	r24, 0x30	; 48
 640:	21 f4       	brne	.+8      	; 0x64a <__EEPROM_REGION_LENGTH__+0x24a>
 642:	9a 2d       	mov	r25, r10
 644:	99 7e       	andi	r25, 0xE9	; 233
 646:	a9 2e       	mov	r10, r25
 648:	09 c0       	rjmp	.+18     	; 0x65c <__EEPROM_REGION_LENGTH__+0x25c>
 64a:	a2 fe       	sbrs	r10, 2
 64c:	06 c0       	rjmp	.+12     	; 0x65a <__EEPROM_REGION_LENGTH__+0x25a>
 64e:	b3 94       	inc	r11
 650:	b3 94       	inc	r11
 652:	04 c0       	rjmp	.+8      	; 0x65c <__EEPROM_REGION_LENGTH__+0x25c>
 654:	8a 2d       	mov	r24, r10
 656:	86 78       	andi	r24, 0x86	; 134
 658:	09 f0       	breq	.+2      	; 0x65c <__EEPROM_REGION_LENGTH__+0x25c>
 65a:	b3 94       	inc	r11
 65c:	a3 fc       	sbrc	r10, 3
 65e:	11 c0       	rjmp	.+34     	; 0x682 <__EEPROM_REGION_LENGTH__+0x282>
 660:	a0 fe       	sbrs	r10, 0
 662:	06 c0       	rjmp	.+12     	; 0x670 <__EEPROM_REGION_LENGTH__+0x270>
 664:	b2 14       	cp	r11, r2
 666:	88 f4       	brcc	.+34     	; 0x68a <__EEPROM_REGION_LENGTH__+0x28a>
 668:	28 0c       	add	r2, r8
 66a:	92 2c       	mov	r9, r2
 66c:	9b 18       	sub	r9, r11
 66e:	0e c0       	rjmp	.+28     	; 0x68c <__EEPROM_REGION_LENGTH__+0x28c>
 670:	b2 14       	cp	r11, r2
 672:	60 f4       	brcc	.+24     	; 0x68c <__EEPROM_REGION_LENGTH__+0x28c>
 674:	b6 01       	movw	r22, r12
 676:	80 e2       	ldi	r24, 0x20	; 32
 678:	90 e0       	ldi	r25, 0x00	; 0
 67a:	0e 94 a5 03 	call	0x74a	; 0x74a <fputc>
 67e:	b3 94       	inc	r11
 680:	f7 cf       	rjmp	.-18     	; 0x670 <__EEPROM_REGION_LENGTH__+0x270>
 682:	b2 14       	cp	r11, r2
 684:	18 f4       	brcc	.+6      	; 0x68c <__EEPROM_REGION_LENGTH__+0x28c>
 686:	2b 18       	sub	r2, r11
 688:	02 c0       	rjmp	.+4      	; 0x68e <__EEPROM_REGION_LENGTH__+0x28e>
 68a:	98 2c       	mov	r9, r8
 68c:	21 2c       	mov	r2, r1
 68e:	a4 fe       	sbrs	r10, 4
 690:	10 c0       	rjmp	.+32     	; 0x6b2 <__EEPROM_REGION_LENGTH__+0x2b2>
 692:	b6 01       	movw	r22, r12
 694:	80 e3       	ldi	r24, 0x30	; 48
 696:	90 e0       	ldi	r25, 0x00	; 0
 698:	0e 94 a5 03 	call	0x74a	; 0x74a <fputc>
 69c:	a2 fe       	sbrs	r10, 2
 69e:	17 c0       	rjmp	.+46     	; 0x6ce <__EEPROM_REGION_LENGTH__+0x2ce>
 6a0:	a1 fc       	sbrc	r10, 1
 6a2:	03 c0       	rjmp	.+6      	; 0x6aa <__EEPROM_REGION_LENGTH__+0x2aa>
 6a4:	88 e7       	ldi	r24, 0x78	; 120
 6a6:	90 e0       	ldi	r25, 0x00	; 0
 6a8:	02 c0       	rjmp	.+4      	; 0x6ae <__EEPROM_REGION_LENGTH__+0x2ae>
 6aa:	88 e5       	ldi	r24, 0x58	; 88
 6ac:	90 e0       	ldi	r25, 0x00	; 0
 6ae:	b6 01       	movw	r22, r12
 6b0:	0c c0       	rjmp	.+24     	; 0x6ca <__EEPROM_REGION_LENGTH__+0x2ca>
 6b2:	8a 2d       	mov	r24, r10
 6b4:	86 78       	andi	r24, 0x86	; 134
 6b6:	59 f0       	breq	.+22     	; 0x6ce <__EEPROM_REGION_LENGTH__+0x2ce>
 6b8:	a1 fe       	sbrs	r10, 1
 6ba:	02 c0       	rjmp	.+4      	; 0x6c0 <__EEPROM_REGION_LENGTH__+0x2c0>
 6bc:	8b e2       	ldi	r24, 0x2B	; 43
 6be:	01 c0       	rjmp	.+2      	; 0x6c2 <__EEPROM_REGION_LENGTH__+0x2c2>
 6c0:	80 e2       	ldi	r24, 0x20	; 32
 6c2:	a7 fc       	sbrc	r10, 7
 6c4:	8d e2       	ldi	r24, 0x2D	; 45
 6c6:	b6 01       	movw	r22, r12
 6c8:	90 e0       	ldi	r25, 0x00	; 0
 6ca:	0e 94 a5 03 	call	0x74a	; 0x74a <fputc>
 6ce:	89 14       	cp	r8, r9
 6d0:	38 f4       	brcc	.+14     	; 0x6e0 <__EEPROM_REGION_LENGTH__+0x2e0>
 6d2:	b6 01       	movw	r22, r12
 6d4:	80 e3       	ldi	r24, 0x30	; 48
 6d6:	90 e0       	ldi	r25, 0x00	; 0
 6d8:	0e 94 a5 03 	call	0x74a	; 0x74a <fputc>
 6dc:	9a 94       	dec	r9
 6de:	f7 cf       	rjmp	.-18     	; 0x6ce <__EEPROM_REGION_LENGTH__+0x2ce>
 6e0:	8a 94       	dec	r8
 6e2:	f3 01       	movw	r30, r6
 6e4:	e8 0d       	add	r30, r8
 6e6:	f1 1d       	adc	r31, r1
 6e8:	80 81       	ld	r24, Z
 6ea:	b6 01       	movw	r22, r12
 6ec:	90 e0       	ldi	r25, 0x00	; 0
 6ee:	0e 94 a5 03 	call	0x74a	; 0x74a <fputc>
 6f2:	81 10       	cpse	r8, r1
 6f4:	f5 cf       	rjmp	.-22     	; 0x6e0 <__EEPROM_REGION_LENGTH__+0x2e0>
 6f6:	22 20       	and	r2, r2
 6f8:	09 f4       	brne	.+2      	; 0x6fc <__EEPROM_REGION_LENGTH__+0x2fc>
 6fa:	42 ce       	rjmp	.-892    	; 0x380 <vfprintf+0x24>
 6fc:	b6 01       	movw	r22, r12
 6fe:	80 e2       	ldi	r24, 0x20	; 32
 700:	90 e0       	ldi	r25, 0x00	; 0
 702:	0e 94 a5 03 	call	0x74a	; 0x74a <fputc>
 706:	2a 94       	dec	r2
 708:	f6 cf       	rjmp	.-20     	; 0x6f6 <__EEPROM_REGION_LENGTH__+0x2f6>
 70a:	f6 01       	movw	r30, r12
 70c:	86 81       	ldd	r24, Z+6	; 0x06
 70e:	97 81       	ldd	r25, Z+7	; 0x07
 710:	02 c0       	rjmp	.+4      	; 0x716 <__EEPROM_REGION_LENGTH__+0x316>
 712:	8f ef       	ldi	r24, 0xFF	; 255
 714:	9f ef       	ldi	r25, 0xFF	; 255
 716:	2b 96       	adiw	r28, 0x0b	; 11
 718:	e2 e1       	ldi	r30, 0x12	; 18
 71a:	0c 94 5b 04 	jmp	0x8b6	; 0x8b6 <__epilogue_restores__>

0000071e <strnlen_P>:
 71e:	fc 01       	movw	r30, r24
 720:	05 90       	lpm	r0, Z+
 722:	61 50       	subi	r22, 0x01	; 1
 724:	70 40       	sbci	r23, 0x00	; 0
 726:	01 10       	cpse	r0, r1
 728:	d8 f7       	brcc	.-10     	; 0x720 <strnlen_P+0x2>
 72a:	80 95       	com	r24
 72c:	90 95       	com	r25
 72e:	8e 0f       	add	r24, r30
 730:	9f 1f       	adc	r25, r31
 732:	08 95       	ret

00000734 <strnlen>:
 734:	fc 01       	movw	r30, r24
 736:	61 50       	subi	r22, 0x01	; 1
 738:	70 40       	sbci	r23, 0x00	; 0
 73a:	01 90       	ld	r0, Z+
 73c:	01 10       	cpse	r0, r1
 73e:	d8 f7       	brcc	.-10     	; 0x736 <strnlen+0x2>
 740:	80 95       	com	r24
 742:	90 95       	com	r25
 744:	8e 0f       	add	r24, r30
 746:	9f 1f       	adc	r25, r31
 748:	08 95       	ret

0000074a <fputc>:
 74a:	0f 93       	push	r16
 74c:	1f 93       	push	r17
 74e:	cf 93       	push	r28
 750:	df 93       	push	r29
 752:	fb 01       	movw	r30, r22
 754:	23 81       	ldd	r18, Z+3	; 0x03
 756:	21 fd       	sbrc	r18, 1
 758:	03 c0       	rjmp	.+6      	; 0x760 <fputc+0x16>
 75a:	8f ef       	ldi	r24, 0xFF	; 255
 75c:	9f ef       	ldi	r25, 0xFF	; 255
 75e:	2c c0       	rjmp	.+88     	; 0x7b8 <fputc+0x6e>
 760:	22 ff       	sbrs	r18, 2
 762:	16 c0       	rjmp	.+44     	; 0x790 <fputc+0x46>
 764:	46 81       	ldd	r20, Z+6	; 0x06
 766:	57 81       	ldd	r21, Z+7	; 0x07
 768:	24 81       	ldd	r18, Z+4	; 0x04
 76a:	35 81       	ldd	r19, Z+5	; 0x05
 76c:	42 17       	cp	r20, r18
 76e:	53 07       	cpc	r21, r19
 770:	44 f4       	brge	.+16     	; 0x782 <fputc+0x38>
 772:	a0 81       	ld	r26, Z
 774:	b1 81       	ldd	r27, Z+1	; 0x01
 776:	9d 01       	movw	r18, r26
 778:	2f 5f       	subi	r18, 0xFF	; 255
 77a:	3f 4f       	sbci	r19, 0xFF	; 255
 77c:	31 83       	std	Z+1, r19	; 0x01
 77e:	20 83       	st	Z, r18
 780:	8c 93       	st	X, r24
 782:	26 81       	ldd	r18, Z+6	; 0x06
 784:	37 81       	ldd	r19, Z+7	; 0x07
 786:	2f 5f       	subi	r18, 0xFF	; 255
 788:	3f 4f       	sbci	r19, 0xFF	; 255
 78a:	37 83       	std	Z+7, r19	; 0x07
 78c:	26 83       	std	Z+6, r18	; 0x06
 78e:	14 c0       	rjmp	.+40     	; 0x7b8 <fputc+0x6e>
 790:	8b 01       	movw	r16, r22
 792:	ec 01       	movw	r28, r24
 794:	fb 01       	movw	r30, r22
 796:	00 84       	ldd	r0, Z+8	; 0x08
 798:	f1 85       	ldd	r31, Z+9	; 0x09
 79a:	e0 2d       	mov	r30, r0
 79c:	09 95       	icall
 79e:	89 2b       	or	r24, r25
 7a0:	e1 f6       	brne	.-72     	; 0x75a <fputc+0x10>
 7a2:	d8 01       	movw	r26, r16
 7a4:	16 96       	adiw	r26, 0x06	; 6
 7a6:	8d 91       	ld	r24, X+
 7a8:	9c 91       	ld	r25, X
 7aa:	17 97       	sbiw	r26, 0x07	; 7
 7ac:	01 96       	adiw	r24, 0x01	; 1
 7ae:	17 96       	adiw	r26, 0x07	; 7
 7b0:	9c 93       	st	X, r25
 7b2:	8e 93       	st	-X, r24
 7b4:	16 97       	sbiw	r26, 0x06	; 6
 7b6:	ce 01       	movw	r24, r28
 7b8:	df 91       	pop	r29
 7ba:	cf 91       	pop	r28
 7bc:	1f 91       	pop	r17
 7be:	0f 91       	pop	r16
 7c0:	08 95       	ret

000007c2 <__ultoa_invert>:
 7c2:	fa 01       	movw	r30, r20
 7c4:	aa 27       	eor	r26, r26
 7c6:	28 30       	cpi	r18, 0x08	; 8
 7c8:	51 f1       	breq	.+84     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
 7ca:	20 31       	cpi	r18, 0x10	; 16
 7cc:	81 f1       	breq	.+96     	; 0x82e <__DATA_REGION_LENGTH__+0x2e>
 7ce:	e8 94       	clt
 7d0:	6f 93       	push	r22
 7d2:	6e 7f       	andi	r22, 0xFE	; 254
 7d4:	6e 5f       	subi	r22, 0xFE	; 254
 7d6:	7f 4f       	sbci	r23, 0xFF	; 255
 7d8:	8f 4f       	sbci	r24, 0xFF	; 255
 7da:	9f 4f       	sbci	r25, 0xFF	; 255
 7dc:	af 4f       	sbci	r26, 0xFF	; 255
 7de:	b1 e0       	ldi	r27, 0x01	; 1
 7e0:	3e d0       	rcall	.+124    	; 0x85e <__DATA_REGION_LENGTH__+0x5e>
 7e2:	b4 e0       	ldi	r27, 0x04	; 4
 7e4:	3c d0       	rcall	.+120    	; 0x85e <__DATA_REGION_LENGTH__+0x5e>
 7e6:	67 0f       	add	r22, r23
 7e8:	78 1f       	adc	r23, r24
 7ea:	89 1f       	adc	r24, r25
 7ec:	9a 1f       	adc	r25, r26
 7ee:	a1 1d       	adc	r26, r1
 7f0:	68 0f       	add	r22, r24
 7f2:	79 1f       	adc	r23, r25
 7f4:	8a 1f       	adc	r24, r26
 7f6:	91 1d       	adc	r25, r1
 7f8:	a1 1d       	adc	r26, r1
 7fa:	6a 0f       	add	r22, r26
 7fc:	71 1d       	adc	r23, r1
 7fe:	81 1d       	adc	r24, r1
 800:	91 1d       	adc	r25, r1
 802:	a1 1d       	adc	r26, r1
 804:	20 d0       	rcall	.+64     	; 0x846 <__DATA_REGION_LENGTH__+0x46>
 806:	09 f4       	brne	.+2      	; 0x80a <__DATA_REGION_LENGTH__+0xa>
 808:	68 94       	set
 80a:	3f 91       	pop	r19
 80c:	2a e0       	ldi	r18, 0x0A	; 10
 80e:	26 9f       	mul	r18, r22
 810:	11 24       	eor	r1, r1
 812:	30 19       	sub	r19, r0
 814:	30 5d       	subi	r19, 0xD0	; 208
 816:	31 93       	st	Z+, r19
 818:	de f6       	brtc	.-74     	; 0x7d0 <__ultoa_invert+0xe>
 81a:	cf 01       	movw	r24, r30
 81c:	08 95       	ret
 81e:	46 2f       	mov	r20, r22
 820:	47 70       	andi	r20, 0x07	; 7
 822:	40 5d       	subi	r20, 0xD0	; 208
 824:	41 93       	st	Z+, r20
 826:	b3 e0       	ldi	r27, 0x03	; 3
 828:	0f d0       	rcall	.+30     	; 0x848 <__DATA_REGION_LENGTH__+0x48>
 82a:	c9 f7       	brne	.-14     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
 82c:	f6 cf       	rjmp	.-20     	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
 82e:	46 2f       	mov	r20, r22
 830:	4f 70       	andi	r20, 0x0F	; 15
 832:	40 5d       	subi	r20, 0xD0	; 208
 834:	4a 33       	cpi	r20, 0x3A	; 58
 836:	18 f0       	brcs	.+6      	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 838:	49 5d       	subi	r20, 0xD9	; 217
 83a:	31 fd       	sbrc	r19, 1
 83c:	40 52       	subi	r20, 0x20	; 32
 83e:	41 93       	st	Z+, r20
 840:	02 d0       	rcall	.+4      	; 0x846 <__DATA_REGION_LENGTH__+0x46>
 842:	a9 f7       	brne	.-22     	; 0x82e <__DATA_REGION_LENGTH__+0x2e>
 844:	ea cf       	rjmp	.-44     	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
 846:	b4 e0       	ldi	r27, 0x04	; 4
 848:	a6 95       	lsr	r26
 84a:	97 95       	ror	r25
 84c:	87 95       	ror	r24
 84e:	77 95       	ror	r23
 850:	67 95       	ror	r22
 852:	ba 95       	dec	r27
 854:	c9 f7       	brne	.-14     	; 0x848 <__DATA_REGION_LENGTH__+0x48>
 856:	00 97       	sbiw	r24, 0x00	; 0
 858:	61 05       	cpc	r22, r1
 85a:	71 05       	cpc	r23, r1
 85c:	08 95       	ret
 85e:	9b 01       	movw	r18, r22
 860:	ac 01       	movw	r20, r24
 862:	0a 2e       	mov	r0, r26
 864:	06 94       	lsr	r0
 866:	57 95       	ror	r21
 868:	47 95       	ror	r20
 86a:	37 95       	ror	r19
 86c:	27 95       	ror	r18
 86e:	ba 95       	dec	r27
 870:	c9 f7       	brne	.-14     	; 0x864 <__DATA_REGION_LENGTH__+0x64>
 872:	62 0f       	add	r22, r18
 874:	73 1f       	adc	r23, r19
 876:	84 1f       	adc	r24, r20
 878:	95 1f       	adc	r25, r21
 87a:	a0 1d       	adc	r26, r0
 87c:	08 95       	ret

0000087e <__prologue_saves__>:
 87e:	2f 92       	push	r2
 880:	3f 92       	push	r3
 882:	4f 92       	push	r4
 884:	5f 92       	push	r5
 886:	6f 92       	push	r6
 888:	7f 92       	push	r7
 88a:	8f 92       	push	r8
 88c:	9f 92       	push	r9
 88e:	af 92       	push	r10
 890:	bf 92       	push	r11
 892:	cf 92       	push	r12
 894:	df 92       	push	r13
 896:	ef 92       	push	r14
 898:	ff 92       	push	r15
 89a:	0f 93       	push	r16
 89c:	1f 93       	push	r17
 89e:	cf 93       	push	r28
 8a0:	df 93       	push	r29
 8a2:	cd b7       	in	r28, 0x3d	; 61
 8a4:	de b7       	in	r29, 0x3e	; 62
 8a6:	ca 1b       	sub	r28, r26
 8a8:	db 0b       	sbc	r29, r27
 8aa:	0f b6       	in	r0, 0x3f	; 63
 8ac:	f8 94       	cli
 8ae:	de bf       	out	0x3e, r29	; 62
 8b0:	0f be       	out	0x3f, r0	; 63
 8b2:	cd bf       	out	0x3d, r28	; 61
 8b4:	09 94       	ijmp

000008b6 <__epilogue_restores__>:
 8b6:	2a 88       	ldd	r2, Y+18	; 0x12
 8b8:	39 88       	ldd	r3, Y+17	; 0x11
 8ba:	48 88       	ldd	r4, Y+16	; 0x10
 8bc:	5f 84       	ldd	r5, Y+15	; 0x0f
 8be:	6e 84       	ldd	r6, Y+14	; 0x0e
 8c0:	7d 84       	ldd	r7, Y+13	; 0x0d
 8c2:	8c 84       	ldd	r8, Y+12	; 0x0c
 8c4:	9b 84       	ldd	r9, Y+11	; 0x0b
 8c6:	aa 84       	ldd	r10, Y+10	; 0x0a
 8c8:	b9 84       	ldd	r11, Y+9	; 0x09
 8ca:	c8 84       	ldd	r12, Y+8	; 0x08
 8cc:	df 80       	ldd	r13, Y+7	; 0x07
 8ce:	ee 80       	ldd	r14, Y+6	; 0x06
 8d0:	fd 80       	ldd	r15, Y+5	; 0x05
 8d2:	0c 81       	ldd	r16, Y+4	; 0x04
 8d4:	1b 81       	ldd	r17, Y+3	; 0x03
 8d6:	aa 81       	ldd	r26, Y+2	; 0x02
 8d8:	b9 81       	ldd	r27, Y+1	; 0x01
 8da:	ce 0f       	add	r28, r30
 8dc:	d1 1d       	adc	r29, r1
 8de:	0f b6       	in	r0, 0x3f	; 63
 8e0:	f8 94       	cli
 8e2:	de bf       	out	0x3e, r29	; 62
 8e4:	0f be       	out	0x3f, r0	; 63
 8e6:	cd bf       	out	0x3d, r28	; 61
 8e8:	ed 01       	movw	r28, r26
 8ea:	08 95       	ret

000008ec <_exit>:
 8ec:	f8 94       	cli

000008ee <__stop_program>:
 8ee:	ff cf       	rjmp	.-2      	; 0x8ee <__stop_program>
